{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils.js","webpack:///./node_modules/dom-utils/lib/matches.js","webpack:///./node_modules/dom-utils/lib/parse-url.js","webpack:///./src/tracker/link-listener.js","webpack:///./node_modules/dom-utils/lib/delegate.js","webpack:///./node_modules/dom-utils/lib/closest.js","webpack:///./node_modules/dom-utils/lib/parents.js","webpack:///./src/tracker/event-transport.js","webpack:///./src/tracker/view-listener.js","webpack:///./src/tracker/index.js","webpack:///./src/app.js","webpack:///./src/index.js","webpack:///./node_modules/intersection-observer/intersection-observer.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","t","e","utils_assign","assign","target","_arguments","arguments","_loop","len","source","keys","forEach","key","extractFieldsFrom","node","nodeType","data","getAttribute","JSON","parse","decodeURIComponent","isTrackable","action","logSupport","test","message","window","Raven","captureMessage","level","proto","Element","nativeMatches","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","element","item","selector","nodes","parentNode","querySelectorAll","HTTP_PORT","HTTPS_PORT","DEFAULT_PORT","RegExp","a","document","createElement","cache","parseUrl","url","location","href","charAt","port","host","replace","origin","protocol","pathname","hash","hostname","search","LinkListener","tracker","_this","this","options","length","TypeError","enabled","addEventListener","defaults","events","shouldTrackLink","callback","opts","handleInteractions","bind","delegates","event","ancestor","eventType","listener","delegateTarget","composed","composedPath","shouldCheckSelf","parentElements","concat","list","push","parent","useCapture","destroy","removeEventListener","delegate_delegate","b","link","_this2","fields","eventOpts","transport","navigator","sendBeacon","type","metaKey","ctrlKey","shiftKey","altKey","which","handler","defaultPrevented","preventDefault","original","wait","wasCalled","fn","setTimeout","execute","_this3","urlParser","slice","w","writable","event_transport_domain","k","EventTransport","domain","_ref","pid","cid","uuid","_ref2","act","String","trim","toLowerCase","obj","params","_","Date","getTime","query","filter","map","encodeURIComponent","join","endpoint","createUrl","img","onload","onerror","src","view_listener_isVisible","threshold","record","intersectionRect","top","bottom","left","right","intersectionRatio","I","ViewListener","IntersectionObserver","MutationObserver","trackOnce","rootMargin","handleIntersection","handleMutations","handleAddedElement","handleRemovedElement","mutationObserver","intersectionObserver","observeElements","readyState","getElements","observe","body","childList","subtree","requestAnimationFrame","disconnect","elementMap","records","sendEvent","mutations","mutation","addedNodes","removedNodes","removed","walkTree","added","unobserve","childNodes","child","unobserveAllElements","elements","tracker_listeners","Tracker","trackLinks","debug","onLinkTrack","event_transport","commands","send","link_listener","view_listener","command","_commands","_console","_len","args","Array","_key","console","info","apply","app_tracker","app_app","src_tracker","_tracker","Error","src_queueName","FortnightObject","src_queue","q","isArray","app","src_toConsumableArray","IntersectionObserverEntry","registry","THROTTLE_TIMEOUT","POLL_INTERVAL","USE_MUTATION_OBSERVER","_observationTargets","some","_registerInstance","entry","_monitorIntersections","_checkForIntersections","_unmonitorIntersections","_unregisterInstance","takeRecords","_queuedEntries","_initThresholds","opt_threshold","sort","isNaN","_parseRootMargin","opt_rootMargin","margins","split","margin","parts","exec","parseFloat","unit","_monitoringIntersections","_monitoringInterval","setInterval","addEvent","_domObserver","attributes","characterData","clearInterval","removeEvent","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","width","height","targetRect","getBoundingClientRect","rootContainsTarget","_rootContainsTarget","oldEntry","_computeTargetAndRootIntersection","newEntry","time","performance","now","boundingClientRect","rootBounds","_hasCrossedThreshold","isIntersecting","_callback","getComputedStyle","display","rect1","rect2","getParentNode","atRoot","parentRect","parentComputedStyle","root","documentElement","overflow","Math","max","min","html","clientWidth","clientHeight","_expandRectByRootMargin","rect","_rootMarginValues","newRect","oldRatio","newRatio","thresholds","containsDeep","indexOf","index","splice","targetArea","intersectionArea","opt_options","timeout","timer","opt_useCapture","attachEvent","detatchEvent","el","err"],"mappings":"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","file":"fortnight.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","\n/**\n * Returns a wrapped version of the provided function.\n * If it's not called when the timeout is reached, it will be called regardless.\n * The wrapped function will also be prevented from being called more than once.\n *\n * @param {Function} callback\n * @param {number} wait\n * @return {Function}\n */\nexport function withTimeout(callback, wait = 2000) {\n  let wasCalled = false;\n  const fn = (...args) => {\n    if (!wasCalled) {\n      wasCalled = true;\n      callback(...args);\n    }\n  };\n  setTimeout(fn, wait);\n  return fn;\n}\n\n/**\n * A simplified shim of Object.assign.\n *\n * @param {Object} target\n * @param {...Object} sources\n * @return {Object}\n */\nexport const assign = Object.assign || function assign(target, ...sources) {\n  for (let i = 0, len = sources.length; i < len; i += 1) {\n    const source = Object(sources[i]);\n    Object.keys(source).forEach((key) => {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        // eslint-disable-next-line no-param-reassign\n        target[key] = source[key];\n      }\n    });\n  }\n  return target;\n};\n\n/**\n * Builds a simply query string from object.\n *\n * @param {object} obj\n * @return {string}\n */\nexport function buildQuery(obj) {\n  return Object.keys(obj).filter(k => obj[k]).map(k => `${encodeURIComponent(k)}=${encodeURIComponent(obj[k])}`).join('&');\n}\n\n/**\n * Will invoke the provided function when the DOM is ready.\n * If already ready, the callback will be invoked immediately.\n *\n * @param {Function} callback The ready callback.\n */\nexport function domReady(callback) {\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', function fn() {\n      document.removeEventListener('DOMContentLoaded', fn);\n      callback();\n    });\n  } else {\n    callback();\n  }\n}\n\n/**\n * Extracts an event fields object from a node.\n *\n * @param {DOMNode} node\n * @param {string} attrName\n * @return {object}\n */\nexport function extractFieldsFrom(node) {\n  if (node.nodeType !== 1) return {};\n  const data = node.getAttribute('data-fortnight-fields');\n  if (!data) return {};\n  try {\n    return JSON.parse(decodeURIComponent(data)) || {};\n  } catch (e) {\n    return {};\n  }\n}\n\n/**\n * Determines if a node is trackable for the provided action.\n *\n * @param {DOMNode} node\n * @param {string} action\n * @return {boolean}\n */\nexport function isTrackable(node, action) {\n  if (node.nodeType !== 1) return false;\n  const value = node.getAttribute('data-fortnight-action');\n  return action === value;\n}\n\nexport function logSupport(test, message) {\n  if (window.Raven && test) {\n    window.Raven.captureMessage(message, { level: 'warning' });\n  }\n}\n","const proto = window.Element.prototype;\nconst nativeMatches = proto.matches ||\n      proto.matchesSelector ||\n      proto.webkitMatchesSelector ||\n      proto.mozMatchesSelector ||\n      proto.msMatchesSelector ||\n      proto.oMatchesSelector;\n\n\n/**\n * Tests if a DOM elements matches any of the test DOM elements or selectors.\n * @param {Element} element The DOM element to test.\n * @param {Element|string|Array<Element|string>} test A DOM element, a CSS\n *     selector, or an array of DOM elements or CSS selectors to match against.\n * @return {boolean} True of any part of the test matches.\n */\nexport default function matches(element, test) {\n  // Validate input.\n  if (element && element.nodeType == 1 && test) {\n    // if test is a string or DOM element test it.\n    if (typeof test == 'string' || test.nodeType == 1) {\n      return element == test ||\n          matchesSelector(element, /** @type {string} */ (test));\n    } else if ('length' in test) {\n      // if it has a length property iterate over the items\n      // and return true if any match.\n      for (let i = 0, item; item = test[i]; i++) {\n        if (element == item || matchesSelector(element, item)) return true;\n      }\n    }\n  }\n  // Still here? Return false\n  return false;\n}\n\n\n/**\n * Tests whether a DOM element matches a selector. This polyfills the native\n * Element.prototype.matches method across browsers.\n * @param {!Element} element The DOM element to test.\n * @param {string} selector The CSS selector to test element against.\n * @return {boolean} True if the selector matches.\n */\nfunction matchesSelector(element, selector) {\n  if (typeof selector != 'string') return false;\n  if (nativeMatches) return nativeMatches.call(element, selector);\n  const nodes = element.parentNode.querySelectorAll(selector);\n  for (let i = 0, node; node = nodes[i]; i++) {\n    if (node == element) return true;\n  }\n  return false;\n}\n","const HTTP_PORT = '80';\nconst HTTPS_PORT = '443';\nconst DEFAULT_PORT = RegExp(':(' + HTTP_PORT + '|' + HTTPS_PORT + ')$');\n\n\nconst a = document.createElement('a');\nconst cache = {};\n\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {!Object} An object with the same properties as a `Location`.\n */\nexport default function parseUrl(url) {\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = (!url || url == '.') ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // It will also not include the `host` or `hostname` properties. Furthermore,\n  // IE will sometimes return no protocol or just a colon, especially for things\n  // like relative protocol URLs (e.g. \"//google.com\").\n  // To workaround all of these issues, we reparse with the full URL from the\n  // `href` property.\n  if (url.charAt(0) == '.' || url.charAt(0) == '/') return parseUrl(a.href);\n\n  // Don't include default ports.\n  let port = (a.port == HTTP_PORT || a.port == HTTPS_PORT) ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port == '0' ? '' : port;\n\n  // Sometimes IE incorrectly includes a port for default ports\n  // (e.g. `:80` or `:443`) even when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  const host = a.host.replace(DEFAULT_PORT, '');\n\n  // Not all browser support `origin` so we have to build it.\n  const origin = a.origin ? a.origin : a.protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  const pathname = a.pathname.charAt(0) == '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host: host,\n    hostname: a.hostname,\n    href: a.href,\n    origin: origin,\n    pathname: pathname,\n    port: port,\n    protocol: a.protocol,\n    search: a.search,\n  };\n}\n","import { delegate, parseUrl } from 'dom-utils';\nimport {\n  withTimeout,\n  assign,\n  extractFieldsFrom,\n  isTrackable,\n  logSupport,\n} from '../utils';\n\n/**\n * Determines if a link click event will cause the current page to unload.\n * @todo Need to determine if link is opened via the context menu.\n *\n * @param {Event} event\n * @param {Element} link\n * @return {boolean}\n */\nfunction linkWillUnloadPage(event, link) {\n  return !(\n    // Only look a click events that will not open a new window or tab\n    event.type !== 'click' || link.target === '_blank' ||\n    // Cmd+Click (Mac) and Ctrl+Click (Windows) opens a new tab\n    // Shift+Click opens a new window in Chrome/Firefox, in Safari it adds to favorites\n    // Opt+Click (Mac) is used to download\n    event.metaKey || event.ctrlKey || event.shiftKey || event.altKey ||\n    // Middle mouse clicks (2) open link in new tab\n    // Right clicks (3) on Firefox trigger a click event\n    event.which > 1\n  );\n}\n\nexport default class LinkListener {\n  /**\n   *\n   * @param {Tracker} tracker\n   * @param {object} options\n   */\n  constructor(tracker, options = {}) {\n    // Prevent execution when disabled or unsupported\n    logSupport(!options.enabled, 'LinkListener is disabled.');\n    logSupport(!window.addEventListener, 'addEventListener is not supported.');\n    if (!options.enabled || !window.addEventListener) return;\n\n    this.tracker = tracker;\n    const defaults = {\n      events: ['click'],\n      selector: 'a',\n      shouldTrackLink: LinkListener.shouldTrackLink,\n      callback: undefined,\n    };\n    this.opts = assign(defaults, options);\n\n    this.handleInteractions = this.handleInteractions.bind(this);\n\n    this.delegates = {};\n    this.opts.events.forEach((event) => {\n      this.delegates[event] = delegate(\n        document,\n        event,\n        this.opts.selector,\n        this.handleInteractions,\n        { composed: true, useCapture: true },\n      );\n    });\n  }\n\n  handleInteractions(event, link) {\n    if (this.opts.shouldTrackLink(link, parseUrl)) {\n      const href = link.getAttribute('href');\n      const fields = extractFieldsFrom(link);\n\n      const eventOpts = {\n        transport: 'beacon',\n        callback: this.opts.callback,\n      };\n\n      const supportsBeacon = navigator.sendBeacon || false;\n      if (!supportsBeacon && linkWillUnloadPage(event, link)) {\n        // The page will unload. Pause the transition and send the event.\n        const handler = () => {\n          window.removeEventListener('click', handler);\n\n          if (!event.defaultPrevented) {\n            event.preventDefault();\n\n            // @todo What happens when the user-land code already does something similar?\n            // For example, an event listener is previously attached to the link, that also\n            // triggers a window.location call. Wouldn't that prevent the event from\n            // being tracked?\n            const original = eventOpts.callback;\n            eventOpts.callback = withTimeout((...args) => {\n              if (typeof original === 'function') original(...args);\n              window.location.href = href;\n            });\n          }\n          this.tracker.execute('event', 'click', fields, eventOpts);\n        };\n        window.addEventListener('click', handler);\n      } else {\n        // Send the event directly.\n        this.tracker.execute('event', 'click', fields, eventOpts);\n      }\n    }\n  }\n\n  /**\n   * Determines if the link should be tracked.\n   *\n   * @param {Element} element\n   * @param {Function} urlParser\n   * @return {boolean}\n   */\n  static shouldTrackLink(element, urlParser) {\n    const href = element.getAttribute('href');\n    const url = urlParser(href);\n    return url.protocol.slice(0, 4) === 'http' && isTrackable(element, 'click');\n  }\n\n  /**\n   * Destroys all event listeners.\n   */\n  destroy() {\n    Object.keys(this.delegates).forEach(key => this.delegates[key].destroy());\n  }\n}\n","import closest from './closest';\nimport matches from './matches';\n\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {!Node} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {!Function} callback A function to run any time the event happens.\n * @param {Object=} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\nexport default function delegate(\n    ancestor, eventType, selector, callback, opts = {}) {\n  // Defines the event listener.\n  const listener = function(event) {\n    let delegateTarget;\n\n    // If opts.composed is true and the event originated from inside a Shadow\n    // tree, check the composed path nodes.\n    if (opts.composed && typeof event.composedPath == 'function') {\n      const composedPath = event.composedPath();\n      for (let i = 0, node; node = composedPath[i]; i++) {\n        if (node.nodeType == 1 && matches(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    } else {\n      // Otherwise check the parents.\n      delegateTarget = closest(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts.useCapture);\n\n  return {\n    destroy: function() {\n      ancestor.removeEventListener(eventType, listener, opts.useCapture);\n    },\n  };\n}\n","import matches from './matches';\nimport parents from './parents';\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean=} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {Element|undefined} The matching element or undefined.\n */\nexport default function closest(element, selector, shouldCheckSelf = false) {\n  if (!(element && element.nodeType == 1 && selector)) return;\n  const parentElements =\n      (shouldCheckSelf ? [element] : []).concat(parents(element));\n\n  for (let i = 0, parent; parent = parentElements[i]; i++) {\n    if (matches(parent, selector)) return parent;\n  }\n}\n","/**\n * Returns an array of a DOM element's parent elements.\n * @param {!Element} element The DOM element whose parents to get.\n * @return {!Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nexport default function parents(element) {\n  const list = [];\n  while (element && element.parentNode && element.parentNode.nodeType == 1) {\n    element = /** @type {!Element} */ (element.parentNode);\n    list.push(element);\n  }\n  return list;\n}\n","import { assign, buildQuery } from '../utils';\n\nconst domain = 'https://fortnight.as3.io';\n\nexport default class EventTransport {\n  /**\n   * Constructor.\n   *\n   * @param {?object} options\n   * @param {?string} options.domain The backend domain.\n   */\n  constructor(options = {}) {\n    const defaults = { domain };\n    this.options = assign(defaults, options);\n  }\n\n  /**\n   * Sends an event to the backend.\n   *\n   * @param {string} action The event action, e.g. `view`, `load` or `click`\n   * @param {object} fields The event fields\n   * @param {string} fields.pid The placement ID\n   * @param {string} fields.cid The campaign ID\n   * @param {?object} options The event options\n   * @param {?string} options.transport The transport type. Image is the default.\n   * @param {?Function} options.callback The callback to fire once complete.\n   */\n  send(\n    action,\n    { pid, cid, uuid } = {},\n    { transport, callback } = {},\n  ) {\n    const act = String(action).trim().toLowerCase();\n    if (!act) return;\n    const _ = (new Date()).getTime();\n    const params = {\n      pid,\n      cid,\n      uuid,\n      _,\n    };\n    const query = buildQuery(params);\n    const endpoint = `/e/${act}.gif?${query}`;\n    const url = this.createUrl(endpoint);\n\n    if (transport === 'beacon' && navigator.sendBeacon) {\n      if (typeof callback === 'function') callback(act, params);\n      navigator.sendBeacon(url);\n    } else {\n      const img = document.createElement('img');\n      if (typeof callback === 'function') {\n        img.onload = () => callback(act, params);\n        img.onerror = () => callback(act, params);\n      }\n      img.src = url;\n    }\n  }\n\n  /**\n   * Configures the domain name for sending events.\n   *\n   * @return string\n   */\n  get domain() {\n    if (!this.options.domain) return domain;\n    return `${this.options.domain.replace(/\\/+$/, '')}`;\n  }\n\n  /**\n   * Creates a URL using the provided endoint with the configured domain.\n   *\n   * @param {string} endpoint\n   * @return {string}\n   */\n  createUrl(endpoint) {\n    return `${this.domain}/${endpoint.replace(/^\\/+/, '')}`;\n  }\n}\n","import {\n  domReady,\n  assign,\n  extractFieldsFrom,\n  isTrackable,\n  logSupport,\n} from '../utils';\n\nrequire('intersection-observer');\n\n/**\n * Detects whether or not an intersection record is visible based on the threshold.\n *\n * @param {number} threshold\n * @param {IntersectionObserverEntry} record\n * @return {boolean}\n */\nfunction isVisible(threshold, record) {\n  if (threshold === 0) {\n    const i = record.intersectionRect;\n    return i.top > 0 || i.bottom > 0 || i.left > 0 || i.right > 0;\n  }\n  return record.intersectionRatio >= threshold;\n}\n\n/**\n * @todo We may want to explore including a MutationObserver polyfill.\n */\nexport default class ViewListener {\n  constructor(tracker, options = {}) {\n    // Disable if the browser does not support the required features.\n    logSupport(!window.IntersectionObserver, 'IntersectionObserver is not supported.');\n    logSupport(!window.MutationObserver, 'MutationObserver is not supported.');\n    if (!(window.IntersectionObserver && window.MutationObserver)) return;\n\n    const defaults = {\n      trackOnce: true,\n      threshold: 0.25,\n      rootMargin: '0px',\n    };\n    this.opts = assign(defaults, options);\n\n    // Bind methods.\n    this.handleIntersection = this.handleIntersection.bind(this);\n    this.handleMutations = this.handleMutations.bind(this);\n    this.handleAddedElement = this.handleAddedElement.bind(this);\n    this.handleRemovedElement = this.handleRemovedElement.bind(this);\n\n    this.mutationObserver = null;\n    this.intersectionObserver = null;\n\n    this.tracker = tracker;\n\n    domReady(() => {\n      this.observeElements();\n    });\n  }\n\n  static getElements() {\n    const nodes = [];\n    const elements = document.querySelectorAll('[data-fortnight-action=\"view\"]');\n    for (let i = 0; i < elements.length; i += 1) {\n      nodes.push(elements[i]);\n    }\n    return nodes;\n  }\n\n  observeElements() {\n    // Setup intersection observer.\n    if (!this.intersectionObserver) {\n      this.intersectionObserver = new IntersectionObserver(this.handleIntersection, {\n        rootMargin: this.opts.rootMargin,\n        threshold: this.opts.threshold,\n      });\n      const elements = ViewListener.getElements();\n      elements.forEach(element => this.intersectionObserver.observe(element));\n    }\n\n    // Setup mutation observer.\n    if (!this.mutationObserver) {\n      this.mutationObserver = new MutationObserver(this.handleMutations);\n      this.mutationObserver.observe(document.body, {\n        childList: true,\n        subtree: true,\n      });\n    }\n\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=612323\n    requestAnimationFrame(() => {});\n  }\n\n  unobserveAllElements() {\n    this.intersectionObserver.disconnect();\n    this.intersectionObserver = null;\n\n    this.mutationObserver.disconnect();\n    this.mutationObserver = null;\n\n    this.elementMap = {};\n  }\n\n  handleIntersection(records) {\n    for (let i = 0; i < records.length; i += 1) {\n      const record = records[i];\n      if (isVisible(this.opts.threshold, record)) {\n        const node = record.target;\n        this.sendEvent(node);\n        if (this.opts.trackOnce) {\n          this.handleRemovedElement(node);\n        }\n      }\n    }\n  }\n\n  handleMutations(mutations) {\n    mutations.forEach((mutation) => {\n      const { addedNodes, removedNodes } = mutation;\n      for (let r = 0; r < removedNodes.length; r += 1) {\n        const removed = removedNodes[r];\n        this.walkTree(removed, this.handleRemovedElement);\n      }\n      for (let a = 0; a < addedNodes.length; a += 1) {\n        const added = addedNodes[a];\n        this.walkTree(added, this.handleAddedElement);\n      }\n    });\n  }\n\n  handleAddedElement(node) {\n    if (node) {\n      this.intersectionObserver.observe(node);\n    }\n  }\n\n  handleRemovedElement(node) {\n    if (node) {\n      this.intersectionObserver.unobserve(node);\n    }\n  }\n\n  walkTree(node, callback) {\n    if (isTrackable(node, 'view')) {\n      callback(node);\n    }\n    for (let i = 0; i < node.childNodes.length; i += 1) {\n      const child = node.childNodes[i];\n      this.walkTree(child, callback);\n    }\n  }\n\n  sendEvent(node) {\n    const fields = extractFieldsFrom(node);\n    this.tracker.execute('event', 'view', fields, { transport: 'beacon' });\n  }\n\n  destroy() {\n    this.unobserveAllElements();\n  }\n}\n","import { assign } from '../utils';\nimport LinkListener from './link-listener';\nimport EventTransport from './event-transport';\nimport ViewListener from './view-listener';\n\nconst listeners = [];\n\nexport default class Tracker {\n  /**\n   * Constructor.\n   *\n   * @param {?object} options\n   * @param {boolean} [options.trackLinks=true] Whether to track links.\n   */\n  constructor(options = {}) {\n    const defaults = {\n      trackLinks: true,\n      debug: false,\n      onLinkTrack: undefined,\n    };\n    const opts = assign(defaults, options);\n    this.opts = opts;\n\n    const transport = new EventTransport({ domain: opts.domain });\n    this.commands = {\n      event: transport.send.bind(transport),\n    };\n    listeners.push(new LinkListener(this, {\n      enabled: opts.trackLinks,\n      callback: opts.onLinkTrack,\n    }));\n    listeners.push(new ViewListener(this, {}));\n  }\n\n  /**\n   * Executes a command on the tracker.\n   *\n   * @param {string} command\n   * @param {...object} args\n   */\n  execute(command, ...args) {\n    if (this.commands[command]) {\n      if (this.opts.debug) {\n        // eslint-disable-next-line no-console\n        console.info('FORTNIGHT', 'Tracker.execute', command, ...args);\n      }\n      this.commands[command](...args);\n    }\n  }\n\n  /**\n   * The tracker instance is being destroyed.\n   * Destroy all event listeners.\n   */\n  destroy() { // eslint-disable-line class-methods-use-this\n    listeners.forEach(listener => listener.destroy());\n  }\n}\n","import Tracker from './tracker';\n\nlet tracker;\nexport default function app(command, ...args) {\n  if (command === 'init') {\n    if (!tracker) tracker = new Tracker(...args);\n  } else if (command === 'destroy') {\n    if (tracker) {\n      tracker.destroy();\n      tracker = undefined;\n    }\n  } else {\n    if (!tracker) throw new Error('No Fortnight instance has been initialized.');\n    tracker.execute(command, ...args);\n  }\n}\n","import app from './app';\n\n// Find the command queue in the `window` object.\nconst WINDOW_VAR_NAME = 'FortnightObject';\nconst queueName = window[WINDOW_VAR_NAME];\nif (!queueName || !window[queueName]) {\n  throw new Error(`No ${WINDOW_VAR_NAME} object was found or initialized. Was the proper JavaScript included on the page?`);\n}\nconst commandQueue = window[queueName];\n\n// Apply the queue to the app.\nconst queue = commandQueue.q;\nif (Array.isArray(queue)) {\n  // Find and send the init commands first, in case the user sent the commands out of order.\n  queue.filter(args => args[0] === 'init').forEach(args => app(...args));\n  // Send all other commands.\n  queue.filter(args => args[0] !== 'init').forEach(args => app(...args));\n}\n\n// Replace the queue with the app.\nwindow[queueName] = app;\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n\n(function(window, document) {\n'use strict';\n\n\n// Exits early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observering a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = entry.rootBounds;\n  this.boundingClientRect = entry.boundingClientRect;\n  this.intersectionRect = entry.intersectionRect || getEmptyRect();\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    this.intersectionRatio = intersectionArea / targetArea;\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (options.root && options.root.nodeType != 1) {\n    throw new Error('root must be an Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections();\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n\n    return item.element != target;\n  });\n  if (!this._observationTargets.length) {\n    this._unmonitorIntersections();\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibilty state is visible.\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function() {\n  if (!this._monitoringIntersections) {\n    this._monitoringIntersections = true;\n\n    // If a poll interval is set, use polling instead of listening to\n    // resize and scroll events or DOM mutations.\n    if (this.POLL_INTERVAL) {\n      this._monitoringInterval = setInterval(\n          this._checkForIntersections, this.POLL_INTERVAL);\n    }\n    else {\n      addEvent(window, 'resize', this._checkForIntersections, true);\n      addEvent(document, 'scroll', this._checkForIntersections, true);\n\n      if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in window) {\n        this._domObserver = new MutationObserver(this._checkForIntersections);\n        this._domObserver.observe(document, {\n          attributes: true,\n          childList: true,\n          characterData: true,\n          subtree: true\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function() {\n  if (this._monitoringIntersections) {\n    this._monitoringIntersections = false;\n\n    clearInterval(this._monitoringInterval);\n    this._monitoringInterval = null;\n\n    removeEvent(window, 'resize', this._checkForIntersections, true);\n    removeEvent(document, 'scroll', this._checkForIntersections, true);\n\n    if (this._domObserver) {\n      this._domObserver.disconnect();\n      this._domObserver = null;\n    }\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, rootRect);\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootRect,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, rootRect) {\n\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var targetRect = getBoundingClientRect(target);\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return;\n\n    if (parent == this.root || parent == document) {\n      atRoot = true;\n      parentRect = rootRect;\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      if (parent != document.body &&\n          parent != document.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n\n      if (!intersectionRect) break;\n    }\n    parent = getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {Object} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var html = document.documentElement;\n    var body = document.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {Object} rect The rect object to expand.\n * @return {Object} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  return containsDeep(this.root || document, target);\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its executiong, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object} The intersection rect or undefined if no intersection\n *     is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {Object} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {Object} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n/**\n * Checks to see if a parent element contains a child elemnt (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n  return parent;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}(window, document));\n"],"sourceRoot":""}